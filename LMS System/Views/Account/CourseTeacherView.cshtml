@model LMS_System.Models.RegisterViewModel


<h2>@ViewData["Name"]</h2>

@var ModulesNames =  (string[]) ViewData["ModuleNames"];
@ModulesNames[0];
@ModulesNames[1];


<h3>@ViewData["Modulename"]</h3>

<h4>@ViewData["Id"]</h4>


@{
    var AppUser = ViewBag.Appuser;
}

<hr/>
<h2>Students in course</h2>

<table class="table">
    <tr>
        <th>
            <a href="?orderby=FirstName">FirstName</a>
        </th>
        <th>
            <a href="?orderby=LastName">LastName</a>
        </th>
        <th>
            <a href="?orderby=Email">Email</a>
        </th>
        <th></th>
    </tr>

    @foreach (var item in AppUser)
    {
    <tr>
        <td>
            @item.FirstName
        </td>
        <td>
            @item.LastName
        </td>
        <td>
            <a href="mailto:@item.Email">@item.Email</a>
        </td>



        @if (User.IsInRole("teacher"))
        {
        <td>
            @Html.ActionLink("Edit", "Edit", "Appusers",  new { id = item.Id }, null) |

            @Html.ActionLink("Details", "Details", "Appusers", new { id = item.Id }, null) |

            @Html.ActionLink("Delete", "Delete", "Appusers", new { id = item.Id }, null)
        </td>
        }

    </tr>
    }

</table>












<h2>Register Student</h2>


@using (Html.BeginForm("Register", "Account", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="hidden" name="role" value="student" />

        @Html.Hidden("role", "student")
        @Html.Hidden("Id", ViewData["Id"])
     

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
